syntax = "proto3";
package chunkserver;

message SetChunkStatusReq {
    uint64 chunk_id = 1;
    uint32 status_to_set = 2;
}

message SetChunkStatusRsp {
    
}

// 分配物理分片后，inode做标记；
// 引用计数置 1
message AllocateInodeReq {
    uint64 slice_id = 1;
    uint32 data_length = 2;
}

message AllocateInodeRsp {

}

message ReadSliceReq {
    uint64 slice_id = 1;
    uint32 offset = 2;
    uint32 length_to_read = 3; // should be 4 MiB by default
}

message ReadSliceRsp {
    uint32 data_length = 1;
    bytes  data = 2;
}

message WriteSliceReq {
    uint64 slice_id = 1;
    uint32 offset = 2;
    bytes  data = 3;
}

message WriteSliceRsp {

}

service ChunkServerService {
    // rpc  (Req) returns (Rsp);
    rpc SetChunkStatus (SetChunkStatusReq) returns (SetChunkStatusRsp);
    rpc AllocateInode (AllocateInodeReq) returns (AllocateInodeRsp);
    rpc ReadSlice (ReadSliceReq) returns (ReadSliceRsp);
    rpc WriteSlice (WriteSliceReq) returns (WriteSliceRsp);
}

// syntax = "proto3";
// package paxoskv;
// message GetReq{
//     bytes key = 1;
// }
// message GetResp{
//     bytes value = 1;
// }
// message SetReq{
//     bytes key = 1;
//     bytes value = 2;
// }
// message SetResp{
// }
// message DelReq{
//     bytes key = 1;
// }
// message DelResp{
// }

// service PaxosKVService {
//     rpc Get (GetReq) returns (GetResp);
//     rpc Set (SetReq) returns (SetResp);
//     rpc Del (DelReq) returns (DelResp);
// }
